// SPDX-License-Identifier: MIT LICENSE

pragma solidity 0.8.4;

import "@openzeppelin/contracts/utils/math/Math.sol";


contract MetroBlockScores {

    uint256 constant MAX_HOOD_SIZE = 10;

    address immutable boosts1Address;
    address immutable boosts2Address;

    constructor(address _boosts1Address, address _boosts2Address) {
       /*
        * Addresses of the contracts that contains list of special entities for each block.
        * They are split into two parts because they don't fit into 16kb limit
        * for a max contract size.
        */
       boosts1Address = _boosts1Address;
       boosts2Address = _boosts2Address;
    }

    /**
     * NB: tokenIds are required to be pre-sorted. No duplicates allowed.
     */
    function getHoodBoost(uint256[] calldata tokenIds) external view returns (uint256) {
      /*
       * Collection of User's nft tokens staked into the Metroverse Vault defines Hood.
       * Each Block could contain Special Entities. Certain combinations of
       * Special Entities incrases rate of MET generation.
       * For example, if Hospital, Police Station and Fire Station are seen
       * all together in User's blocks then whole collection will give 5% more
       * MET.
       */
      uint256 hoodSize = tokenIds.length;

      if(hoodSize == 0) {
        return 0;
      }

      // count the special bits of the tokens
      uint256 counterHi;
      uint256 counterLo;
      uint256 prevTokenId;
      for (uint256 i; i < tokenIds.length; i++) {
        uint256 tokenId = tokenIds[i];
        require(prevTokenId < tokenId, 'no duplicates allowed');
        prevTokenId = tokenId;

        uint256 boost = getTokenBoosts256(tokenId);
        unchecked {
          counterLo +=  boost       & 0x0001_0001_0001_0001_0001_0001_0001_0001_0001_0001_0001_0001_0001_0001_0001_0001;
          counterHi += (boost >> 8) & 0x0001_0001_0001_0001_0001_0001_0001_0001_0001_0001_0001_0001_0001_0001_0001_0001;
        }
      }

      // There are 10 boost categories. Each category gives specific increase in MET production.
      // To get category boost blocks should have 3 special buildings related to the category
      // Safety, Education, Entertainment, Transport, Sports, Energy, Cultural, Mansion, Tech, Odds
      uint256 totalBoost = 0;
      uint256 hoodSizeCorrection = 1000 * MAX_HOOD_SIZE / Math.max(hoodSize, MAX_HOOD_SIZE);

      unchecked { // River & River
        uint256 min = ((counterHi >> 240) & 0xffff) / 3;
        if (min > 0) {totalBoost += 800 * _getSpreadedBoost(hoodSizeCorrection, min);}
      }

      unchecked { // Rail & Rail
        uint256 min = ((counterLo >> 240) & 0xffff) / 3;
        if (min > 0) {totalBoost += 400 * _getSpreadedBoost(hoodSizeCorrection, min);}
      }

      // for each category get the minimum of the 3 counts and add the stacked boost for that category
      unchecked { // Safety
        uint256 min = (counterHi >> 224) & 0xffff;
        uint256 v   = (counterLo >> 224) & 0xffff; if (v < min) {min = v;}
        v           = (counterHi >> 208) & 0xffff; if (v < min) {min = v;}
        if (min > 0) {totalBoost += 500 * _getSpreadedBoost(hoodSizeCorrection, min);}
      }
      unchecked { // Education
        uint256 min = (counterLo >> 208) & 0xffff;
        uint256 v   = (counterHi >> 192) & 0xffff; if (v < min) {min = v;}
        v           = (counterLo >> 192) & 0xffff; if (v < min) {min = v;}
        if (min > 0) {totalBoost += 600 * _getSpreadedBoost(hoodSizeCorrection, min);}
      }
      unchecked { // Entertainment
        uint256 min = (counterHi >> 176) & 0xffff;
        uint256 v   = (counterLo >> 176) & 0xffff; if (v < min) {min = v;}
        v           = (counterHi >> 160) & 0xffff; if (v < min) {min = v;}
        if (min > 0) {totalBoost += 600 * _getSpreadedBoost(hoodSizeCorrection, min);}
      }
      unchecked { // Transport
        uint256 min = (counterLo >> 160) & 0xffff;
        uint256 v   = (counterHi >> 144) & 0xffff; if (v < min) {min = v;}
        v           = (counterLo >> 144) & 0xffff; if (v < min) {min = v;}
        if (min > 0) {totalBoost += 500 * _getSpreadedBoost(hoodSizeCorrection, min);}
      }
      unchecked { // Sports
        uint256 min = (counterHi >> 128) & 0xffff;
        uint256 v   = (counterLo >> 128) & 0xffff; if (v < min) {min = v;}
        v           = (counterHi >> 112) & 0xffff; if (v < min) {min = v;}
        if (min > 0) {totalBoost += 1000 * _getSpreadedBoost(hoodSizeCorrection, min);}
      }
      unchecked { // Energy
        uint256 min = (counterLo >> 112) & 0xffff;
        uint256 v   = (counterHi >> 96) & 0xffff; if (v < min) {min = v;}
        v           = (counterLo >> 96) & 0xffff; if (v < min) {min = v;}
        if (min > 0) {totalBoost += 800 * _getSpreadedBoost(hoodSizeCorrection, min);}
      }
      unchecked { // Cultural
        uint256 min = (counterHi >> 80) & 0xffff;
        uint256 v   = (counterLo >> 80) & 0xffff; if (v < min) {min = v;}
        v           = (counterHi >> 64) & 0xffff; if (v < min) {min = v;}
        if (min > 0) {totalBoost += 500 * _getSpreadedBoost(hoodSizeCorrection, min);}
      }
      unchecked { // Mansion
        uint256 min = (counterLo >> 64) & 0xffff;
        uint256 v   = (counterHi >> 48) & 0xffff; if (v < min) {min = v;}
        v           = (counterLo >> 48) & 0xffff; if (v < min) {min = v;}
        if (min > 0) {totalBoost += 600 * _getSpreadedBoost(hoodSizeCorrection, min);}
      }
      unchecked { // Tech
        uint256 min = (counterHi >> 32) & 0xffff;
        uint256 v   = (counterLo >> 32) & 0xffff; if (v < min) {min = v;}
        v           = (counterHi >> 16) & 0xffff; if (v < min) {min = v;}
        if (min > 0) {totalBoost += 800 * _getSpreadedBoost(hoodSizeCorrection, min);}
      }
      unchecked { // Odds
        uint256 min = (counterLo >> 16) & 0xffff;
        uint256 v   = (counterHi) & 0xffff; if (v < min) {min = v;}
        v           = (counterLo) & 0xffff; if (v < min) {min = v;}
        if (min > 0) {totalBoost += 600 * _getSpreadedBoost(hoodSizeCorrection, min);}
      }


      // 10000 equals to 1, to be divided by 10000 in vault contract
      // return 10100 to give boost of 1%
      unchecked {
        return 10000 + totalBoost / 1000 ;
      }
    }

    function _getSpreadedBoost(uint256 hoodSizeCorrection, uint256 stackedBoost) internal pure returns (uint256) {
      // One boost has a limited scope, it works onlt for MAX_HOOD_SIZE items.
      // If hood is bigger there should be proportionally more boosts.
      // Add 1000 to keep precision.
      uint256 spreadedBoost = stackedBoost * hoodSizeCorrection;

      // If there are too many boosts of one category we don't multiply them uncontrollably, 
      // Instead, we implement diminishing returns
      if (spreadedBoost >= 3000) {
        spreadedBoost = 1750;
      } else if (spreadedBoost >= 2000) {
        spreadedBoost = 1500 + (spreadedBoost - 2000) / 4;
      } else if (spreadedBoost > 1000) {
        spreadedBoost = 1000 + (spreadedBoost - 1000) / 2;
      }

      return spreadedBoost;
    }

    function getTokenBoosts256(uint256 tokenId) private view returns (uint256) {
      unchecked {
        (address contractAddress, uint index) = tokenId <= 5000 ? (boosts1Address, tokenId-1) : (boosts2Address, tokenId-5001);
        uint256 mem;
        assembly {
          let data := mload(0x40) // load the free memory pointer for temporarily storing the data
          // read a 32 byte word at offset from the runtime code at contractAddress  and put it into the memory location at data, 
          // 32 bytes are added to the offset because that is to skip the 32 STOP opcodes at the start of the runtime code
          extcodecopy(contractAddress, data, add(shl(2, and(index, not(7))), 32), 32)
          mem := mload(data) // load the memory into the solidity variable
        }
        return (mem >> (index & 7)) & 0x01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01;
      }
    }

    function getBlockScore(uint256 tokenId) external pure returns (uint256 score) {
        require(tokenId <= 10000 && tokenId > 0, "Invalid tokenId");
        bytes1 chunk = scoresData[tokenId-1];
        uint8 chunkUint8 = uint8(chunk);
        return 200 + uint256(chunkUint8);
    }

    // in python: "".join([hex(x-200)[2:].zfill(2) for x in scores])
    // each encoded score has to be within 0-256
    bytes constant scoresData = hex"";

}
